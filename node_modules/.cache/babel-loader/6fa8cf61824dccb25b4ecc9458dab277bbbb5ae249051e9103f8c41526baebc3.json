{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Development/code/phase2/code-challenge1-phase2/my-react-app/src/Components/myForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\n// import ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyForm() {\n  _s();\n  const [data, setData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  });\n  function handleSubmit(e) {\n    const newData = {\n      ...data\n    };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n    console.log(newData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => submit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Form Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => handleSubmit(e),\n        id: \"date\",\n        value: data.date,\n        type: \"date\",\n        name: \"date\",\n        placeholder: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => handleSubmit(e),\n        id: \"description\",\n        value: data.description,\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => handleSubmit(e),\n        id: \"category\",\n        value: data.category,\n        type: \"text\",\n        name: \"category\",\n        placeholder: \"catergory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => handleSubmit(e),\n        id: \"amount\",\n        value: data.amount,\n        type: \"number\",\n        name: \"amount\",\n        placeholder: \"amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      input: true,\n      type: \"ubmit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(MyForm, \"TedoYPPk7dXQgZekbrQoWQMJEPw=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["useState","React","jsxDEV","_jsxDEV","MyForm","_s","data","setData","date","description","category","amount","handleSubmit","e","newData","target","id","value","console","log","onSubmit","submit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","type","name","placeholder","input","_c","$RefreshReg$"],"sources":["/home/alvin/Development/code/phase2/code-challenge1-phase2/my-react-app/src/Components/myForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n\nfunction MyForm() {\n    const [data, setData] = useState({\n      date:\"\",\n      description:\"\",\n      category:\"\",\n      amount:\"\"\n    })\n    \n\n    function handleSubmit(e){\n       const newData ={...data}\n       newData[e.target.id] = e.target.value\n       setData (newData)\n       console.log(newData)\n   }\n\n return(\n    <form onSubmit ={(e)=> submit(e)}>\n      <h1>Form Input</h1>\n      <div className='myForm'>\n      <label>date</label>\n      <input onChange={(e)=>handleSubmit(e)} id =\"date\" value ={data.date} type=\"date\" name =\"date\" placeholder='Date'/>\n      <label>Description</label>\n      <input onChange={(e)=>handleSubmit(e)} id =\"description\" value ={data.description} type=\"text\" name =\"description\" placeholder='Description'/>\n      <label>category</label>\n      <input onChange={(e)=>handleSubmit(e)} id =\"category\" value ={data.category} type=\"text\" name =\"category\" placeholder='catergory'/>\n      <label>Amount</label>\n      <input onChange={(e)=>handleSubmit(e)} id =\"amount\" value ={data.amount} type=\"number\" name =\"amount\" placeholder='amount'/>\n      </div>\n      \n      <button input type='ubmit'>Submit</button>\n\n\n\n      \n     </form>\n )\n\n}\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}