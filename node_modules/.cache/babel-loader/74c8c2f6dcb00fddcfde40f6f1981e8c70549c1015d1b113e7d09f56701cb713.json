{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Development/code/phase2/code-challenge1-phase2/my-react-app/src/Components/transactionList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './transactions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionList() {\n  _s();\n  const [column, setColumn] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/db.json\").then(response => response.json()).then(data => {\n      setColumn(Object.keys(data.transactions[0]));\n      setTransactions(data.transactions);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      O: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: column.map((c, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            keys: i,\n            children: c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map((transaction, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.id\n          }, transaction.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.date\n          }, transaction.date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.description\n          }, transaction.description, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.category\n          }, transaction.category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.amount\n          }, transaction.amount, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }, this);\n}\n_s(TransactionList, \"Q/9DFrAURdmDhNHcZG7S+5BBU+s=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionList","_s","column","setColumn","transactions","setTransactions","fetch","then","response","json","data","Object","keys","children","O","map","c","i","fileName","_jsxFileName","lineNumber","columnNumber","transaction","id","date","description","category","amount","_c","$RefreshReg$"],"sources":["/home/alvin/Development/code/phase2/code-challenge1-phase2/my-react-app/src/Components/transactionList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './transactions.css';\nfunction TransactionList () {\n    const [column,setColumn]= useState([]);\n  const [transactions,setTransactions] = useState([]);\n    useEffect(() => {\n        fetch(\"http://localhost:3000/db.json\")\n          .then(response => response.json())\n          .then(data=>  {\n            setColumn(Object.keys(data.transactions[0]))\n            setTransactions(data.transactions)\n        })\n        },[]);\n\n    \n        return (\n          <div>\n            <table O>\n              <thead>\n                <tr>\n                  {column.map((c,i)=>(\n                    <th keys={i}>{c}</th>\n                    \n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {transactions.map((transaction,i)=>(\n                  <tr key={i}>\n                    <td key={transaction.id}>{transaction.id}</td>\n                    <td key={transaction.date}>{transaction.date}</td>\n                    <td key={transaction.description}>{transaction.description}</td>\n                    <td key={transaction.category}>{transaction.category}</td>\n                    <td key={transaction.amount}>{transaction.amount}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )\n                }\n\nexport default TransactionList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}