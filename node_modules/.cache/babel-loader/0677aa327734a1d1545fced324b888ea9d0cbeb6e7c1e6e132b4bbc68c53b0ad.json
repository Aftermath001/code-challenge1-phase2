{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Development/code/phase2/code-challenge1-phase2/my-react-app/src/Components/transactionList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './transactions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionList() {\n  _s();\n  const [column, setColumn] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/db.json\").then(response => response.json()).then(data => {\n      setColumn(Object.keys(data.transactions[0]));\n      setTransactions(data.transactions);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TransactionList, {\n      onAddTransaction: TransactionList,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: column.map((c, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              keys: i,\n              children: c\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.map((transaction, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.id\n            }, transaction.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.date\n            }, transaction.date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.description\n            }, transaction.description, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.category\n            }, transaction.category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, transaction.amount, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }, this);\n}\n_s(TransactionList, \"Q/9DFrAURdmDhNHcZG7S+5BBU+s=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionList","_s","column","setColumn","transactions","setTransactions","fetch","then","response","json","data","Object","keys","children","onAddTransaction","map","c","i","fileName","_jsxFileName","lineNumber","columnNumber","transaction","id","date","description","category","amount","_c","$RefreshReg$"],"sources":["/home/alvin/Development/code/phase2/code-challenge1-phase2/my-react-app/src/Components/transactionList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './transactions.css';\nfunction TransactionList () {\n    const [column,setColumn]= useState([]);\n  const [transactions,setTransactions] = useState([]);\n    useEffect(() => {\n        fetch(\"http://localhost:3000/db.json\")\n          .then(response => response.json())\n          .then(data=>  {\n            setColumn(Object.keys(data.transactions[0]))\n            setTransactions(data.transactions)\n        })\n        },[]);\n\n    \n        return (\n          <div>\n            <TransactionList onAddTransaction ={TransactionList}>\n            <table>\n              <thead>\n                <tr>\n                  {column.map((c,i)=>(\n                    <th keys={i}>{c}</th>\n                    \n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {transactions.map((transaction,i)=>(\n                  <tr key={i}>\n                    <td key={transaction.id}>{transaction.id}</td>\n                    <td key={transaction.date}>{transaction.date}</td>\n                    <td key={transaction.description}>{transaction.description}</td>\n                    <td key={transaction.category}>{transaction.category}</td>\n                    <td key={transaction.amount}>{transaction.amount}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            </TransactionList>\n            \n          </div>\n        )\n                }\n\nexport default TransactionList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,SAASC,eAAeA,CAAA,EAAI;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAEP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,YAAY,EAACC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACjDC,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZP,SAAS,CAACQ,MAAM,CAACC,IAAI,CAACF,IAAI,CAACN,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5CC,eAAe,CAACK,IAAI,CAACN,YAAY,CAAC;IACtC,CAAC,CAAC;EACF,CAAC,EAAC,EAAE,CAAC;EAGL,oBACEL,OAAA;IAAAc,QAAA,eACEd,OAAA,CAACC,eAAe;MAACc,gBAAgB,EAAGd,eAAgB;MAAAa,QAAA,eACpDd,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,eACEd,OAAA;YAAAc,QAAA,EACGX,MAAM,CAACa,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,kBACdlB,OAAA;cAAIa,IAAI,EAAEK,CAAE;cAAAJ,QAAA,EAAEG;YAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAEhB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACC,eACRtB,OAAA;UAAAc,QAAA,EACGT,YAAY,CAACW,GAAG,CAAC,CAACO,WAAW,EAACL,CAAC,kBAC9BlB,OAAA;YAAAc,QAAA,gBACEd,OAAA;cAAAc,QAAA,EAA0BS,WAAW,CAACC;YAAE,GAA/BD,WAAW,CAACC,EAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAuB,eAC9CtB,OAAA;cAAAc,QAAA,EAA4BS,WAAW,CAACE;YAAI,GAAnCF,WAAW,CAACE,IAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAyB,eAClDtB,OAAA;cAAAc,QAAA,EAAmCS,WAAW,CAACG;YAAW,GAAjDH,WAAW,CAACG,WAAW;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAgC,eAChEtB,OAAA;cAAAc,QAAA,EAAgCS,WAAW,CAACI;YAAQ,GAA3CJ,WAAW,CAACI,QAAQ;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAA6B,eAC1DtB,OAAA;cAAAc,QAAA,EAA8BS,WAAW,CAACK;YAAM,GAAvCL,WAAW,CAACK,MAAM;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAA2B;UAAA,GAL/CJ,CAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAOX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACU;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEd;AAEA;AAACpB,EAAA,CAzCRD,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AA2CxB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}